name: GitHub Actions Demo
run-name: Github Actions Testing
on: 
  push:
    branches:
      - testbranch
  pull_request:
    branches:
      - main

env:
  AWS_REGION: us-east-1
  TEAR_DOWN: no

jobs:
  Explore-GitHub-Actions:
    runs-on: self-hosted
    steps:
      - run: echo "Event name is ${{ github.event_name }}."
      - run: echo "Server type is ${{ runner.os }}."
      - run: echo "Branch is ${{ github.ref }}, repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v3

      - run: echo "The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "The workflow is now ready to test your code on the runner."
      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}
      - name: Run linter
        run: |
          cfn-lint ${{ github.workspace }}/cloudformation/*.yml
      - run: echo "Job Status is ${{ job.status }}."
  FortiDevSec-Run:
    runs-on: self-hosted
    needs: Explore-GitHub-Actions
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
      - run: |
          env | grep -E "GITHUB_ACTIONS|GITHUB_RUN_NUMBER|GITHUB_REF_NAME|GITHUB_SHA" > /tmp/env
          docker pull registry.fortidevsec.forticloud.com/fdevsec_sast:latest
          docker run --rm --env-file /tmp/env --mount type=bind,source=$PWD,target=/scan registry.fortidevsec.forticloud.com/fdevsec_sast:latest
  DeployStackTest:
    runs-on: self-hosted
    needs: FortiDevSec-Run
    steps:
      - name: Check out repo code
        uses: actions/checkout@v2
      - name: Configure AWS credentials
        id: creds
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
      - name: Deploy template
        uses: aws-actions/aws-cloudformation-github-deploy@master
        with:
          name: test-stack
          template: ${{ github.workspace }}/cloudformation/test-stack-base-gwlb.yml
          no-fail-on-empty-changeset: "1"
      - name: Delete stack
        if: ${{ env.TEAR_DOWN == 'yes' }}
        run: |
          aws cloudformation delete-stack --stack-name test-stack
